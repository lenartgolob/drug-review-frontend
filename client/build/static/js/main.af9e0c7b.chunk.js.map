{"version":3,"sources":["components/login/login.js","components/login/register.js","components/LoginPage.js","components/MobileLogin.js","components/NavMenu.js","components/LoginPageResponsive.js","components/Review.js","components/SearchPage.js","components/ReviewPage.js","components/ReviewRect.js","components/MyReviewsPage.js","components/Profile.js","components/ProfilePage.js","components/ReviewsPage.js","components/AllReviewsPage.js","components/ReviewEditPage.js","components/MobileRegister.js","App.js","serviceWorker.js","index.js","login.svg"],"names":["MySwal","withReactContent","Swal","Login","props","handleChange","event","preventDefault","setState","target","name","value","handleLogin","bind","keyPress","state","id","email","password","redirect","e","keyCode","fetch","method","headers","body","JSON","stringify","this","then","res","json","status","fire","icon","title","admin","localStorage","setItem","initials","avatar_color","avatar_font_color","to","className","ref","containerRef","src","loginImg","alt","htmlFor","type","placeholder","onChange","onKeyDown","style","background","onClick","React","Component","withRouter","Register","handleRegistration","handleResponse","lastname","rows","response","window","location","reload","length","LoginPage","isLogginActive","rightSide","classList","add","remove","prevState","current","currentActive","container","changeState","RightSide","MobileLogin","Box","boxShadow","marginBottom","Link","href","NavMenu","auth","checked","handleMenu","anchorEl","currentTarget","handleClose","handleLogout","clear","replace","isLoggedIn","Logout","IconButton","aria-label","aria-controls","aria-haspopup","color","Avatar","backgroundColor","getItem","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","marginTop","MenuItem","hide","Button","variant","size","classes","AppBar","root","position","Toolbar","edge","Typography","withStyles","Review","height","width","updateWindowDimensions","addEventListener","removeEventListener","innerWidth","innerHeight","customIcons","1","fontSize","label","2","3","4","5","IconContainer","other","borderRadius","avatarColor","avatarFontColor","Rating","defaultValue","rating","IconContainerComponent","readOnly","drugName","review","SearchPage","handleRecentReviews","drugs","review1","review2","review3","drug","data","tmpArray","i","push","medicine_name","uniqueDrugs","Array","from","Set","reviews","Autocomplete","openText","popupIcon","popupIndicatorOpen","openOnFocus","options","getOptionLabel","option","renderInput","params","TextField","startIcon","display","ReviewPage","handleSubmit","redirectSuccess","console","log","user_id","msg","noValidate","autoComplete","component","mb","borderColor","getLabelText","newValue","multiline","textAlign","endIcon","ReviewRect","handleDelete","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","user","parseInt","MyReviewsPage","handleReviews","isLoaded","map","item","key","Profile","handleUser","handleProfile","ProfilePage","ReviewsPage","url","search","queryString","parse","lastName","charAt","AllReviewsPage","ReviewEditPage","handleAlert","margin","MobileRegister","App","path","exact","LoginPageResponsive","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.af9e0c7b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport loginImg from \"../../login.svg\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nexport class Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.keyPress = this.keyPress.bind(this);\r\n\r\n    this.state = {\r\n      id: 0,\r\n      email: '',\r\n      password: '',\r\n      redirect: false,\r\n    }\r\n  }\r\n\r\n\r\n\r\n  handleChange = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  keyPress(e){\r\n    if(e.keyCode === 13){\r\n      fetch('https://drug-review-backend.herokuapp.com/user/session',{\r\n        method: 'POST',\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify({\r\n          email: this.state.email,\r\n          password: this.state.password\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .then(status => {\r\n        if(status === 'wrong_pass') {\r\n          MySwal.fire({\r\n            icon: 'error',\r\n            title: 'Password is incorrect!',\r\n          })\r\n          this.setState({\r\n            password: \"\"\r\n          })\r\n        }\r\n        else if(status === 'wrong_user') {\r\n          MySwal.fire({\r\n            icon: 'error',\r\n            title: 'Account doesn\\'t exist!',\r\n          })\r\n          this.setState({\r\n            email: \"\",\r\n            password: \"\"\r\n          })\r\n        }\r\n        else {\r\n          if(status.admin > 0) {\r\n            localStorage.setItem('admin', true);\r\n          }\r\n          localStorage.setItem('id', status.id);\r\n          localStorage.setItem('initials', status.initials);\r\n          localStorage.setItem('avatar_color', status.avatar_color);\r\n          localStorage.setItem('avatar_font_color', status.avatar_font_color);\r\n          this.setState({ redirect: true });\r\n        }     \r\n      });\r\n    }\r\n }\r\n\r\n  handleLogin() {\r\n\r\n    fetch('https://drug-review-backend.herokuapp.com/user/session',{\r\n      method: 'POST',\r\n      headers: {\"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password\r\n      })\r\n    })\r\n    .then(res => res.json())\r\n    .then(status => {\r\n      if(status === 'wrong_pass') {\r\n        MySwal.fire({\r\n          icon: 'error',\r\n          title: 'Password is incorrect!',\r\n        })\r\n        this.setState({\r\n          password: \"\"\r\n        })\r\n      }\r\n      else if(status === 'wrong_user') {\r\n        MySwal.fire({\r\n          icon: 'error',\r\n          title: 'Account doesn\\'t exist!',\r\n        })\r\n        this.setState({\r\n          email: \"\",\r\n          password: \"\"\r\n        })\r\n      }\r\n      else {\r\n        if(status.admin > 0) {\r\n          localStorage.setItem('admin', true);\r\n        }\r\n        localStorage.setItem('id', status.id);\r\n        localStorage.setItem('initials', status.initials);\r\n        localStorage.setItem('avatar_color', status.avatar_color);\r\n        localStorage.setItem('avatar_font_color', status.avatar_font_color);\r\n        this.setState({ redirect: true });\r\n      }\r\n      \r\n    });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { redirect } = this.state;\r\n\r\n    if (redirect) {\r\n      return <Redirect to='/'/>;\r\n    }\r\n    return (\r\n      <div className=\"base-container\" ref={this.props.containerRef}>\r\n        <div className=\"header\">Login</div>\r\n          <div className=\"content\">\r\n            <div className=\"image\">\r\n              <img src={loginImg} className=\"loginImg\" alt=\"loginImg\" />\r\n            </div>\r\n            <div className=\"form\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" value={this.state.email} name=\"email\" placeholder=\"email\" onChange={this.handleChange} />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" name=\"password\" value={this.state.password} placeholder=\"password\" onChange={this.handleChange} onKeyDown={this.keyPress} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"footer\">\r\n            <button className=\"btn\" style={{background: \"#4A7EBB\"}} onClick={this.handleLogin}>\r\n              Login\r\n            </button>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","import React from \"react\";\r\nimport loginImg from \"../../login.svg\";\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegistration = this.handleRegistration.bind(this);\r\n    this.handleResponse = this.handleResponse.bind(this);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      name: '',\r\n      lastname: '',\r\n      rows: [],\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleResponse(response) {\r\n    if(response === false) {\r\n      MySwal.fire({\r\n        icon: 'error',\r\n        title: 'Email is already taken!',\r\n      })\r\n      this.setState({\r\n        email: \"\",\r\n        password: \"\"\r\n      })\r\n    }\r\n    else if(response === \"wrong_type\") {\r\n      MySwal.fire({\r\n        icon: 'error',\r\n        title: 'Invalid email!',\r\n      })\r\n      this.setState({\r\n        email: \"\",\r\n        password: \"\"\r\n      })\r\n    }\r\n    else {\r\n      window.location.reload()\r\n    }\r\n  }\r\n\r\n  handleRegistration() {\r\n    if(this.state.name === \"\" || this.state.lastname === \"\" || this.state.email === \"\" || this.state.password === \"\") {\r\n      MySwal.fire({\r\n        icon: 'error',\r\n        title: 'All fields are required!',\r\n      })\r\n    }\r\n    else if (this.state.password.length < 6) {\r\n      MySwal.fire({\r\n        icon: 'error',\r\n        title: 'Password has to have atleast 6 characters!',\r\n      })\r\n      this.setState({\r\n        password: \"\",\r\n      })\r\n    }\r\n    else {\r\n    fetch('https://drug-review-backend.herokuapp.com/user/new',{\r\n      method: 'POST',\r\n      headers: {\"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify({\r\n        name: this.state.name,\r\n        lastname: this.state.lastname,\r\n        email: this.state.email,\r\n        password: this.state.password\r\n      })\r\n    })\r\n    .then(res => res.json())\r\n    .then(response => this.handleResponse(response));\r\n  }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"base-container\" ref={this.props.containerRef}>\r\n        <div className=\"header\">Register</div>\r\n        <div className=\"content\">\r\n          <div className=\"image\">\r\n            <img src={loginImg} alt=\"registerImg\" />\r\n          </div>\r\n          <div className=\"form\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"namme\">First name</label>\r\n              <input type=\"text\" value={this.state.name} name=\"name\" placeholder=\"First name\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"namme\">Last name</label>\r\n              <input type=\"text\" value={this.state.lastname} name=\"lastname\" placeholder=\"Last name\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type=\"email\" name=\"email\" value={this.state.email} placeholder=\"email\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input type=\"password\" name=\"password\" value={this.state.password} placeholder=\"password\" onChange={this.handleChange} onKeyDown={this.keyPress} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"footer\">\r\n          <button type=\"button\" style={{background: \"#4A7EBB\"}} className=\"btn\" onClick={this.handleRegistration}>\r\n            Register\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport \"./login/style.scss\";\r\nimport Login from \"./login/login\";\r\nimport Register from \"./login/register\";\r\nimport './components.scss';\r\n\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLogginActive: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Add .right by default\r\n    this.rightSide.classList.add(\"right\");\r\n  }\r\n\r\n  changeState() {\r\n    const { isLogginActive } = this.state;\r\n\r\n    if (isLogginActive) {\r\n      this.rightSide.classList.remove(\"right\");\r\n      this.rightSide.classList.add(\"left\");\r\n    } else {\r\n      this.rightSide.classList.remove(\"left\");\r\n      this.rightSide.classList.add(\"right\");\r\n    }\r\n    this.setState(prevState => ({ isLogginActive: !prevState.isLogginActive }));\r\n  }\r\n\r\n  render() {\r\n    const { isLogginActive } = this.state;\r\n    const current = isLogginActive ? \"Register\" : \"Login\";\r\n    const currentActive = isLogginActive ? \"login\" : \"register\";\r\n    return (\r\n      <div className=\"container\" >\r\n        <div className=\"App\">\r\n          <div className=\"login\">\r\n            <div className=\"container\" ref={ref => (this.container = ref)}>\r\n              {isLogginActive && (\r\n                <Login containerRef={ref => (this.current = ref)} />\r\n              )}\r\n              {!isLogginActive && (\r\n                <Register containerRef={ref => (this.current = ref)} />\r\n              )}\r\n            </div>\r\n            <RightSide\r\n              current={current}\r\n              currentActive={currentActive}\r\n              containerRef={ref => (this.rightSide = ref)}\r\n              onClick={this.changeState.bind(this)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst RightSide = props => {\r\n  return (\r\n    <div\r\n      className=\"right-side\"\r\n      ref={props.containerRef}\r\n      onClick={props.onClick}\r\n    >\r\n      <div className=\"inner-container\">\r\n        <div className=\"text\">{props.current}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;","import React from \"react\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { Redirect } from 'react-router';\r\nimport Box from '@material-ui/core/Box';\r\nimport Link from '@material-ui/core/Link';\r\nimport './components.scss';\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nexport class MobileLogin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.keyPress = this.keyPress.bind(this);\r\n\r\n    this.state = {\r\n      id: 0,\r\n      email: '',\r\n      password: '',\r\n      redirect: false,\r\n    }\r\n  }\r\n\r\n\r\n\r\n  handleChange = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  keyPress(e){\r\n    if(e.keyCode === 13){\r\n      fetch('https://drug-review-backend.herokuapp.com/user/session',{\r\n        method: 'POST',\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify({\r\n          email: this.state.email,\r\n          password: this.state.password\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .then(status => {\r\n        if(status === 'wrong_pass') {\r\n          MySwal.fire({\r\n            icon: 'error',\r\n            title: 'Password is incorrect!',\r\n          })\r\n          this.setState({\r\n            password: \"\"\r\n          })\r\n        }\r\n        else if(status === 'wrong_user') {\r\n          MySwal.fire({\r\n            icon: 'error',\r\n            title: 'Account doesn\\'t exist!',\r\n          })\r\n          this.setState({\r\n            email: \"\",\r\n            password: \"\"\r\n          })\r\n        }\r\n        else {\r\n          if(status.admin > 0) {\r\n            localStorage.setItem('admin', true);\r\n          }\r\n          localStorage.setItem('id', status.id);\r\n          localStorage.setItem('initials', status.initials);\r\n          localStorage.setItem('avatar_color', status.avatar_color);\r\n          localStorage.setItem('avatar_font_color', status.avatar_font_color);\r\n          this.setState({ redirect: true });\r\n        }     \r\n      });\r\n    }\r\n }\r\n\r\n  handleLogin() {\r\n\r\n    fetch('https://drug-review-backend.herokuapp.com/user/session',{\r\n      method: 'POST',\r\n      headers: {\"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password\r\n      })\r\n    })\r\n    .then(res => res.json())\r\n    .then(status => {\r\n      if(status === 'wrong_pass') {\r\n        MySwal.fire({\r\n          icon: 'error',\r\n          title: 'Password is incorrect!',\r\n        })\r\n        this.setState({\r\n          password: \"\"\r\n        })\r\n      }\r\n      else if(status === 'wrong_user') {\r\n        MySwal.fire({\r\n          icon: 'error',\r\n          title: 'Account doesn\\'t exist!',\r\n        })\r\n        this.setState({\r\n          email: \"\",\r\n          password: \"\"\r\n        })\r\n      }\r\n      else {\r\n        if(status.admin > 0) {\r\n          localStorage.setItem('admin', true);\r\n        }\r\n        localStorage.setItem('id', status.id);\r\n        localStorage.setItem('initials', status.initials);\r\n        localStorage.setItem('avatar_color', status.avatar_color);\r\n        localStorage.setItem('avatar_font_color', status.avatar_font_color);\r\n        this.setState({ redirect: true });\r\n      }\r\n      \r\n    });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { redirect } = this.state;\r\n\r\n    if (redirect) {\r\n      return <Redirect to='/'/>;\r\n    }\r\n    return (\r\n      <div className=\"base-container\" ref={this.props.containerRef}>\r\n        <Box className=\"loginBox\" boxShadow={4}>\r\n            <div className=\"header\">Login</div>\r\n            <div className=\"content\">\r\n                <div className=\"form\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input className=\"inputMobile\" type=\"email\" value={this.state.email} name=\"email\" placeholder=\"email\" onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input className=\"inputMobile\" type=\"password\" name=\"password\" value={this.state.password} placeholder=\"password\" onChange={this.handleChange} onKeyDown={this.keyPress} />\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"footer\">\r\n                <button className=\"btn\" style={{background: \"#4A7EBB\", marginBottom: 15}} onClick={this.handleLogin}>\r\n                Login\r\n                </button><br />\r\n                <Link href=\"/register/mobile\">Register here</Link>\r\n            </div>\r\n        </Box>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(MobileLogin);","import React from \"react\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport './components.scss';\r\n\r\nconst styles = {\r\n  root: {\r\n    // background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    // display: \"none\"\r\n  }\r\n};\r\n\r\n\r\nclass NavMenu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleMenu = this.handleMenu.bind(this);\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n    this.isLoggedIn = this.isLoggedIn.bind(this);\r\n    this.Login = this.Login.bind(this);\r\n    this.Logout = this.Logout.bind(this);\r\n\r\n\r\n    this.state = {\r\n        anchorEl: null,\r\n        auth: true,\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n        auth: event.target.checked\r\n      });\r\n  };\r\n\r\n  handleMenu = (event) => {\r\n    this.setState({\r\n        anchorEl: event.currentTarget\r\n      });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n        anchorEl: null,\r\n      });  \r\n  }\r\n\r\n  handleLogout = () => {\r\n    localStorage.clear();\r\n    this.setState({\t  \r\n      anchorEl: null,\r\n    });\t\r\n    window.location.replace(\"/\");\r\n  };\r\n\r\n  Logout() {\r\n    return <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={this.handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <Avatar style={{backgroundColor: localStorage.getItem(\"avatar_color\"), color: localStorage.getItem(\"avatar_font_color\")}}><span className=\"navAvatar\">{localStorage.getItem(\"initials\")}</span></Avatar>\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={this.state.anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={Boolean(this.state.anchorEl)}\r\n                onClose={this.handleClose}\r\n                style={{marginTop: \"42px\"}}\r\n              >\r\n                <a href=\"/user/profile\"><MenuItem>Profile</MenuItem></a>\r\n              <a href=\"/user/reviews\"><MenuItem>My reviews</MenuItem></a>\r\n                {(localStorage.getItem(\"admin\") === \"true\") ? <a href=\"/all/reviews\"><MenuItem>All reviews</MenuItem></a> : null}\r\n                <MenuItem onClick={this.handleLogout}>Logout</MenuItem>\r\n              </Menu>\r\n          </div>;\r\n  }\r\n\r\n  Login() {\r\n    if(this.props.hide) {\r\n      return null;\r\n    }\r\n    else {\r\n    return <Button onClick={this.handleLogin} variant=\"contained\" size=\"small\" href=\"/login\">Login</Button>;\r\n    }\r\n  }\r\n\r\n  isLoggedIn() {\r\n    if (localStorage.getItem(\"id\") == null) {\r\n      return <this.Login />;\r\n    }\r\n    else {\r\n      return <this.Logout />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n        <div className=\"root\">\r\n        <AppBar classes={{ root: classes.root }} position=\"static\">\r\n          <Toolbar>\r\n            <IconButton href=\"/\" edge=\"start\" color=\"inherit\" aria-label=\"menu\" className=\"menuButton\">\r\n              <HomeIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className=\"navTitle\">\r\n              Drug Review\r\n            </Typography>\r\n            <this.isLoggedIn />\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(NavMenu)","import React from \"react\";\r\nimport LoginPageDesktop from \"./LoginPage\";\r\nimport MobileLogin from \"./MobileLogin\";\r\nimport NavMenu from \"./NavMenu\";\r\n\r\n\r\nclass Review extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      height: null,\r\n      width: null\r\n    };\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener(\"resize\", this.updateWindowDimensions.bind(this));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n      window.removeEventListener(\"resize\", this.updateWindowDimensions.bind(this));\r\n  }\r\n\r\n  updateWindowDimensions() {\r\n      this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"container\">\r\n      <NavMenu hide=\"true\" />\r\n      {(this.state.width > 600) ? <LoginPageDesktop /> : <MobileLogin />}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Review;","import React from \"react\";\r\nimport './components.scss';\r\nimport Box from '@material-ui/core/Box';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport PropTypes from 'prop-types';\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\r\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\r\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\r\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst customIcons = {\r\n    1: {\r\n      icon: <SentimentVeryDissatisfiedIcon style={{ fontSize: 29 }} />,\r\n      label: 'Very Dissatisfied',\r\n    },\r\n    2: {\r\n      icon: <SentimentDissatisfiedIcon style={{ fontSize: 29 }} />,\r\n      label: 'Dissatisfied',\r\n    },\r\n    3: {\r\n      icon: <SentimentSatisfiedIcon style={{ fontSize: 29 }} />,\r\n      label: 'Neutral',\r\n    },\r\n    4: {\r\n      icon: <SentimentSatisfiedAltIcon style={{ fontSize: 29 }} />,\r\n      label: 'Satisfied',\r\n    },\r\n    5: {\r\n      icon: <SentimentVerySatisfiedIcon style={{ fontSize: 29 }} />,\r\n      label: 'Very Satisfied',\r\n    },\r\n  };\r\n  \r\n  function IconContainer(props) {\r\n    const { value, ...other } = props;\r\n    return <span {...other}>{customIcons[value].icon}</span>;\r\n  }\r\n  \r\n  IconContainer.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n\r\nclass Review extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // const url = \"https://drug-review-backend.herokuapp.com/api/customers\";\r\n\r\n    // fetch(url)\r\n    //   .then(res => res.json())\r\n    //   .then(customers => this.setState({customers}, () => console.log('Customers fetched...', customers)));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Box className=\"reviewBoxContainer\" boxShadow={3} borderRadius={4} >\r\n            <Avatar style={{backgroundColor: this.props.avatarColor, color: this.props.avatarFontColor}} className=\"avatar\">{this.props.initials}</Avatar>\r\n            <Rating\r\n              className=\"rating\"\r\n              name=\"customized-icons\"\r\n              defaultValue={this.props.rating}\r\n              IconContainerComponent={IconContainer}\r\n              readOnly \r\n            />\r\n            <p><span className=\"reviewComponentTitle\">{this.props.title}</span><span className=\"reviewComponentParagraph\"> review of </span><span className=\"reviewComponentTitle\">{this.props.drugName}</span></p>\r\n            <p>{this.props.review}</p>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Review;\r\n","import React from \"react\";\r\nimport \"../App.scss\";\r\nimport NavMenu from \"./NavMenu\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport Review from \"./Review\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport './components.scss';\r\n\r\nconst styles = {\r\n  popupIndicatorOpen: {\r\n    display: \"none\"\r\n  }\r\n};\r\n\r\nclass SearchPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRecentReviews = this.handleRecentReviews.bind(this);\r\n    this.keyPress = this.keyPress.bind(this);\r\n    this.state = {\r\n      drugs: [],\r\n      review1: {},\r\n      review2: {},\r\n      review3: {},\r\n      drug: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://datadiscovery.nlm.nih.gov/resource/crzr-uvwg\")\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            let tmpArray = []\r\n            for (var i = 0; i < data.length; i++) {\r\n                tmpArray.push(data[i].medicine_name)\r\n            }\r\n\r\n            const uniqueDrugs = Array.from(new Set(tmpArray));\r\n\r\n\r\n            this.setState({\r\n                drugs: uniqueDrugs\r\n            })\r\n        });\r\n\r\n        fetch('https://drug-review-backend.herokuapp.com/reviews/recent')\r\n        .then(res => res.json())\r\n        .then(reviews => this.handleRecentReviews(reviews));\r\n          \r\n}\r\n\r\nkeyPress(e){\r\n  if(e.keyCode === 13){\r\n    if(this.state.drug === null) {\r\n\r\n    }\r\n    else {\r\n      localStorage.setItem('drug', this.state.drug);\r\n      window.location.href = \"/reviews?drug=\" + this.state.drug;\r\n\r\n    }\r\n  }\r\n}\r\n\r\n  handleRecentReviews(reviews) {\r\n    this.setState({\r\n      review1: reviews[0],\r\n      review2: reviews[1],\r\n      review3: reviews[2],\r\n\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n    <div className=\"container\">\r\n      <NavMenu />\r\n      <h1 className=\"welcome\">Welcome to drug review!</h1>\r\n      <h4 className=\"subtitle\">Read reviews. Write reviews. Find drugs.</h4>\r\n      <div className=\"searchContainer\">\r\n        <Autocomplete\r\n          openText={\"Search\"}\r\n          popupIcon={<a href={(this.state.drug === null) ? null : \"/reviews?drug=\" + this.state.drug}><SearchIcon /></a>}\r\n          classes={{ popupIndicatorOpen: classes.popupIndicatorOpen }}          \r\n          openOnFocus={true}\r\n          onKeyDown={this.keyPress}\r\n          onChange={(event, value) => this.setState({drug: value})}\r\n          className=\"autocomplete\"\r\n          id=\"combo-box-demo\"\r\n          options={this.state.drugs}\r\n          getOptionLabel={(option) => option}\r\n          renderInput={(params) => <TextField {...params} label=\"Search for drugs\" variant=\"outlined\" />}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"default\"\r\n          href=\"/review\"\r\n          className=\"reviewButton\"\r\n          startIcon={<CloudUploadIcon />}\r\n        >\r\n          Write Your Review\r\n        </Button>\r\n      </div>\r\n        <h2 className=\"recentReviewsTitle\">Featured</h2>\r\n        <hr className=\"underlineRecentReviews\" />\r\n        <div className=\"reviewRow\">\r\n          {(this.state.review1.rating > 0) ?  \r\n            <Review \r\n              initials={this.state.review1.initials} \r\n              title={this.state.review1.title}\r\n              avatarColor={this.state.review1.avatar_color}\r\n              avatarFontColor={this.state.review1.avatar_font_color}\r\n              rating={this.state.review1.rating}\r\n              drugName={this.state.review1.drug}\r\n              review={this.state.review1.review}\r\n            />  \r\n            :\r\n            null\r\n          }\r\n          {(this.state.review1.rating > 0) ?  \r\n            <Review \r\n              initials={this.state.review2.initials} \r\n              title={this.state.review2.title}\r\n              avatarColor={this.state.review2.avatar_color}\r\n              avatarFontColor={this.state.review2.avatar_font_color}\r\n              rating={this.state.review2.rating}\r\n              drugName={this.state.review2.drug}\r\n              review={this.state.review2.review}\r\n            />  \r\n            :\r\n            null\r\n          }\r\n          {(this.state.review1.rating > 0) ?  \r\n            <Review \r\n              initials={this.state.review3.initials} \r\n              title={this.state.review3.title}\r\n              avatarColor={this.state.review3.avatar_color}\r\n              avatarFontColor={this.state.review3.avatar_font_color}\r\n              rating={this.state.review3.rating}\r\n              drugName={this.state.review3.drug}\r\n              review={this.state.review3.review}\r\n            />  \r\n            :\r\n            null\r\n          }\r\n        </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(SearchPage)","import React from \"react\";\r\nimport NavMenu from \"./NavMenu\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport PropTypes from 'prop-types';\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\r\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\r\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\r\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\r\nimport Box from '@material-ui/core/Box';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { Redirect } from 'react-router';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport './components.scss';\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst customIcons = {\r\n  1: {\r\n    icon: <SentimentVeryDissatisfiedIcon fontSize=\"large\" />,\r\n    label: 'Very Dissatisfied',\r\n  },\r\n  2: {\r\n    icon: <SentimentDissatisfiedIcon fontSize=\"large\" />,\r\n    label: 'Dissatisfied',\r\n  },\r\n  3: {\r\n    icon: <SentimentSatisfiedIcon fontSize=\"large\" />,\r\n    label: 'Neutral',\r\n  },\r\n  4: {\r\n    icon: <SentimentSatisfiedAltIcon fontSize=\"large\" />,\r\n    label: 'Satisfied',\r\n  },\r\n  5: {\r\n    icon: <SentimentVerySatisfiedIcon fontSize=\"large\" />,\r\n    label: 'Very Satisfied',\r\n  },\r\n};\r\n\r\nfunction IconContainer(props) {\r\n  const { value, ...other } = props;\r\n  return <span {...other}>{customIcons[value].icon}</span>;\r\n}\r\n\r\nIconContainer.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\nclass ReviewPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      drugs: [],\r\n      drug: \"\",\r\n      rating: null,\r\n      title: \"\",\r\n      review: \"\",\r\n      redirect: false,\r\n      redirectSuccess: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"id\") == null) {\r\n      this.setState({ redirect: true })\r\n    }\r\n    else {\r\n    fetch(\"https://datadiscovery.nlm.nih.gov/resource/crzr-uvwg\")\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            let tmpArray = []\r\n            for (var i = 0; i < data.length; i++) {\r\n                tmpArray.push(data[i].medicine_name)\r\n            }\r\n\r\n            const uniqueDrugs = Array.from(new Set(tmpArray));\r\n\r\n\r\n            this.setState({\r\n                drugs: uniqueDrugs\r\n            })\r\n            console.log(uniqueDrugs);\r\n        });\r\n      }\r\n  }\r\n\r\n  handleSubmit() {\r\n    console.log(this.state.drug)\r\n    console.log(this.state.rating)\r\n    console.log(this.state.title)\r\n    console.log(this.state.review)\r\n\r\n    if(this.state.drug !== \"\" && this.state.rating !== null && this.state.title !== \"\" && this.state.review !== \"\") {\r\n      fetch('https://drug-review-backend.herokuapp.com/review/new',{\r\n        method: 'POST',\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify({\r\n          user_id: localStorage.getItem(\"id\"),\r\n          drug: this.state.drug,\r\n          rating: this.state.rating,\r\n          title: this.state.title,\r\n          review: this.state.review,\r\n\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .then(msg => this.setState({ redirectSuccess: true }));\r\n    }\r\n    else {\r\n      MySwal.fire({\r\n        icon: 'error',\r\n        title: 'All fields are required!',\r\n      })\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { redirect } = this.state;\r\n\r\n    if (redirect) {\r\n      return <Redirect to='/login'/>;\r\n    }\r\n\r\n    const { redirectSuccess } = this.state;\r\n\r\n    if (redirectSuccess) {\r\n      return <Redirect to='/'/>;\r\n    }\r\n    return (\r\n    <div className=\"container\">\r\n      <NavMenu />\r\n      <div className=\"reviewContainer\">\r\n        <p className=\"reviewTitle\">Your first-hand experiences really helps other patients. Thanks!</p>\r\n        <hr className=\"underlineReviewPage\" />\r\n        <form noValidate autoComplete=\"off\">\r\n          <Autocomplete\r\n            onChange={(event, value) => this.setState({drug: value})}\r\n            id=\"combo-box-demo\"\r\n            options={this.state.drugs}\r\n            getOptionLabel={(option) => option}\r\n            className=\"reviewAutocomplete\"\r\n            renderInput={(params) => <TextField {...params} label=\"Search for drugs\" variant=\"outlined\" />}\r\n          />\r\n          <Box className=\"reviewBox\" component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n            <p>Your overall rating of this drug</p>\r\n            <Rating\r\n              size=\"large\"\r\n              name=\"customized-icons\"\r\n              defaultValue={null}\r\n              getLabelText={(value) => customIcons[value].label}\r\n              IconContainerComponent={IconContainer}\r\n              onChange={(event, newValue) => {\r\n                this.setState({rating: newValue});\r\n              }}\r\n            />\r\n          </Box>\r\n          <TextField className=\"reviewFormItem\" name=\"title\" id=\"outlined-basic\" label=\"Title of your review\" variant=\"outlined\" onChange={this.handleChange} />\r\n          <TextField\r\n            className=\"reviewFormItem\"\r\n            id=\"outlined-multiline-static\"\r\n            label=\"Your review\"\r\n            name=\"review\"\r\n            onChange={this.handleChange}\r\n            placeholder=\"Tell people about your expirience with this drug.\"\r\n            multiline\r\n            rows=\"4\"\r\n            variant=\"outlined\"\r\n          />\r\n          <div style={{textAlign: \"right\", marginBottom: 35}}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              endIcon={<SendIcon />}\r\n              className=\"reviewSubmit\"\r\n              onClick={this.handleSubmit}\r\n            >\r\n              Submit your review\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReviewPage;","import React from \"react\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport PropTypes from 'prop-types';\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\r\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\r\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\r\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport './components.scss';\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\n\r\nconst customIcons = {\r\n    1: {\r\n      icon: <SentimentVeryDissatisfiedIcon style={{ fontSize: 30 }} />,\r\n      label: 'Very Dissatisfied',\r\n    },\r\n    2: {\r\n      icon: <SentimentDissatisfiedIcon style={{ fontSize: 30 }} />,\r\n      label: 'Dissatisfied',\r\n    },\r\n    3: {\r\n      icon: <SentimentSatisfiedIcon style={{ fontSize: 30 }} />,\r\n      label: 'Neutral',\r\n    },\r\n    4: {\r\n      icon: <SentimentSatisfiedAltIcon style={{ fontSize: 30 }} />,\r\n      label: 'Satisfied',\r\n    },\r\n    5: {\r\n      icon: <SentimentVerySatisfiedIcon style={{ fontSize: 30 }} />,\r\n      label: 'Very Satisfied',\r\n    },\r\n  };\r\n  \r\n  function IconContainer(props) {\r\n    const { value, ...other } = props;\r\n    return <span {...other}>{customIcons[value].icon}</span>;\r\n  }\r\n  \r\n  IconContainer.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n\r\n\r\nclass ReviewRect extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  handleDelete() {\r\n    MySwal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        fetch('https://drug-review-backend.herokuapp.com/review/delete',{\r\n          method: 'POST',\r\n          headers: {\"Content-Type\": \"application/json\"},\r\n          body: JSON.stringify({\r\n            id: this.props.id,\r\n          })\r\n        })\r\n        .then(res => res.json())\r\n        .then(msg => (msg) ?         \r\n        Swal.fire(\r\n          'Deleted!',\r\n          'Your review has been deleted.',\r\n          'success'\r\n        ).then(() => window.location.reload())\r\n        :\r\n        Swal.fire(\r\n          'Something went wrong!',\r\n          'Your review hasn\\'t been deleted.',\r\n          'error'\r\n        ))\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Box className=\"reviewRectBoxContainer\" boxShadow={3} borderRadius={4} >\r\n        <div>\r\n            <Avatar style={{backgroundColor: this.props.avatarColor, color: this.props.avatarFontColor, width: \"45px\", height: \"45px\"}} className=\"avatarRect\">{this.props.initials}</Avatar>\r\n            <p className=\"reviewAuthor\">{this.props.user}</p>\r\n            {\r\n              (localStorage.getItem(\"admin\")) ? \r\n              <div className=\"iconContainer\">\r\n                <IconButton href={\"../edit/review?id=\" + this.props.id} className=\"reviewRectIconButton\" aria-label=\"edit\">\r\n                    <EditIcon style={{ fontSize: 30 }} className=\"reviewRectIcon\" />\r\n                </IconButton>\r\n                <IconButton onClick={this.handleDelete}  className=\"reviewRectIconButton\" aria-label=\"delete\">\r\n                    <DeleteIcon style={{ fontSize: 30 }} className=\"reviewRectIcon\" />\r\n                </IconButton>\r\n              </div>\r\n            : \r\n            <div className=\"iconContainer\" style={(this.props.user_id === parseInt(localStorage.getItem(\"id\"))) ? null : {display: \"none\"}}>\r\n              <IconButton href={\"../edit/review?id=\" + this.props.id} className=\"reviewRectIconButton\" aria-label=\"edit\">\r\n                  <EditIcon style={{ fontSize: 30 }} className=\"reviewRectIcon\" />\r\n              </IconButton>\r\n              <IconButton onClick={this.handleDelete}  className=\"reviewRectIconButton\" aria-label=\"delete\">\r\n                  <DeleteIcon style={{ fontSize: 30 }} className=\"reviewRectIcon\" />\r\n              </IconButton>\r\n            </div>\r\n            }\r\n        </div>\r\n            <hr className=\"rectUnderline\" />\r\n            <Rating\r\n              className=\"ratingRect\"\r\n              name=\"customized-icons\"\r\n              defaultValue={this.props.rating}\r\n              IconContainerComponent={IconContainer}\r\n              readOnly \r\n            />\r\n            <p className=\"reviewRectTitle\"><span className=\"reviewRectComponentTitle\">{this.props.title}</span><span className=\"reviewRectComponentParagraph\"> review of </span><span className=\"reviewRectComponentTitleName\">{this.props.drugName}</span></p>\r\n            <p className=\"reviewRectParagraph\">{this.props.review}</p>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReviewRect;","import React from \"react\";\r\nimport NavMenu from \"./NavMenu\";\r\nimport ReviewRect from \"./ReviewRect\";\r\nimport { Redirect } from 'react-router';\r\n// import Grid from '@material-ui/core/Grid';\r\nimport './components.scss';\r\n\r\n\r\n\r\nclass MyReviewsPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleReviews = this.handleReviews.bind(this);\r\n    this.state = {\r\n      reviews: [{}],\r\n      isLoaded: false,\r\n      redirect: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"id\") == null) {\r\n      this.setState({ redirect: true })\r\n    }\r\n    else {\r\n    fetch('https://drug-review-backend.herokuapp.com/my/reviews',{\r\n      method: 'POST',\r\n      headers: {\"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify({\r\n        id: localStorage.getItem(\"id\")\r\n      })\r\n    })\r\n    .then(res => res.json())\r\n    .then(reviews => this.handleReviews(reviews));\r\n    }\r\n  }\r\n\r\n  handleReviews(reviews) {\r\n    console.log(reviews)\r\n    this.setState({\r\n      reviews: reviews,\r\n      isLoaded: true,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { redirect } = this.state;\r\n\r\n    if (redirect) {\r\n      return <Redirect to='/login'/>;\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n      <NavMenu />\r\n      <div className=\"myReviewContainer\">\r\n        <p className=\"myReviewTitle\">My reviews</p>\r\n        <hr className=\"underlineReview\" />\r\n        {\r\n          this.state.reviews.map((item, i) => {\r\n            if(this.state.isLoaded){\r\n            return <ReviewRect \r\n                      key={i}\r\n                      id={this.state.reviews[i].id}\r\n                      user_id={this.state.reviews[i].user_id}\r\n                      initials={localStorage.getItem(\"initials\")} \r\n                      user={this.state.reviews[i].name + \" \" + this.state.reviews[i].lastname}\r\n                      title={this.state.reviews[i].title}\r\n                      avatarColor={localStorage.getItem(\"avatar_color\")}\r\n                      avatarFontColor={localStorage.getItem(\"avatar_font_color\")}\r\n                      rating={this.state.reviews[i].rating}\r\n                      drugName={this.state.reviews[i].drug}\r\n                      review={this.state.reviews[i].review}\r\n                   />\r\n            }\r\n            else {\r\n              return null\r\n            }\r\n            })\r\n        }\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyReviewsPage;","import React from \"react\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nclass Profile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleUser = this.handleUser.bind(this);\r\n    this.handleProfile = this.handleProfile.bind(this);\r\n    this.handleResponse = this.handleResponse.bind(this);\r\n    this.state = {\r\n        name: \"\",\r\n        lastname: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://drug-review-backend.herokuapp.com/user/profile',{\r\n        method: 'POST',\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify({\r\n          id: localStorage.getItem(\"id\")\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .then(user => this.handleUser(user));\r\n  }\r\n\r\n  handleUser(user) {\r\n    this.setState({\r\n      name: user[0].name,\r\n      lastname: user[0].lastname,\r\n      email: user[0].email,\r\n    })\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleResponse(response) {\r\n    if(response === true) {\r\n      MySwal.fire({\r\n        icon: 'success',\r\n        title: 'Profile successfuly updated!',\r\n      })\r\n\r\n        this.setState({\r\n        password: \"\"\r\n        });\r\n    }\r\n    else if (response === \"wrong_pass\") {\r\n        MySwal.fire({\r\n          icon: 'error',\r\n          title: 'Wrong password!',\r\n        })\r\n        this.setState({\r\n            password: \"\"\r\n            });\r\n    }\r\n    else if (response === false) {\r\n      MySwal.fire({\r\n        icon: 'error',\r\n        title: 'That email is already taken!',\r\n      })\r\n        this.setState({\r\n            password: \"\"\r\n      });\r\n    }\r\n    else if(response === \"wrong_type\") {\r\n      MySwal.fire({\r\n        icon: 'error',\r\n        title: 'Invalid email!',\r\n      })\r\n      this.setState({\r\n        password: \"\"\r\n      })\r\n    }\r\n    }\r\n\r\n   handleProfile() {\r\n    if(this.state.name === \"\" || this.state.lastname === \"\" || this.state.email === \"\" || this.state.password === \"\") {\r\n      MySwal.fire({\r\n        icon: 'error',\r\n        title: 'All fields are required!',\r\n      })\r\n    }\r\n    else if (this.state.password.length < 6) {\r\n      MySwal.fire({\r\n        icon: 'error',\r\n        title: 'Password has to have atleast 6 characters!',\r\n      })\r\n    }\r\n    else {\r\n    fetch('https://drug-review-backend.herokuapp.com/user/profile/edit',{\r\n      method: 'POST',\r\n      headers: {\"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify({\r\n        id: localStorage.getItem(\"id\"),\r\n        name: this.state.name,\r\n        lastname: this.state.lastname,\r\n        email: this.state.email,\r\n        password: this.state.password\r\n      })\r\n    })\r\n    .then(res => res.json())\r\n    .then(response => this.handleResponse(response));\r\n  }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"base-container\">\r\n        <Box className=\"profileBox\" boxShadow={4}>\r\n        <div className=\"header headerProfile\">Edit profile</div>\r\n        <div className=\"content profileContent\">\r\n          <div className=\"form\">\r\n            <div className=\"form-group form-groupFrom\">\r\n              <label htmlFor=\"namme\">First name</label>\r\n              <input type=\"text\" value={this.state.name} name=\"name\" placeholder=\"First name\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"form-group form-groupFrom\">\r\n              <label htmlFor=\"namme\">Last name</label>\r\n              <input type=\"text\" value={this.state.lastname} name=\"lastname\" placeholder=\"Last name\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"form-group form-groupFrom\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type=\"email\" value={this.state.email} name=\"email\" placeholder=\"email\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"form-group form-groupFrom\">\r\n              <label htmlFor=\"password\">Password <span className=\"confirmPassword\">(To confirm changes enter your password)</span></label>\r\n              <input type=\"password\" value={this.state.password} name=\"password\" placeholder=\"password\" onChange={this.handleChange} onKeyDown={this.keyPress} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button type=\"button\" style={{background: \"#4A7EBB\", marginTop: 20}} className=\"btn btnProfile\" onClick={this.handleProfile}>\r\n            Save changes\r\n          </button>\r\n        </div>\r\n          </Box>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport NavMenu from \"./NavMenu\";\r\nimport Profile from \"./Profile\";\r\n\r\nimport './components.scss';\r\n\r\n\r\nclass ProfilePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"id\") == null) {\r\n      window.location.replace(\"/login\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"container\">\r\n      <NavMenu />\r\n      <Profile />\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfilePage;","import React from \"react\";\r\nimport queryString from 'query-string';\r\nimport NavMenu from \"./NavMenu\";\r\nimport ReviewRect from \"./ReviewRect\";\r\nimport './components.scss';\r\n\r\n\r\n\r\nclass ReviewsPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        reviews: [{}],\r\n        isLoaded: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var url = this.props.location.search;\r\n    var params = queryString.parse(url);\r\n    var drug = params.drug;\r\n    this.setState({drug: drug})\r\n\r\n    fetch('https://drug-review-backend.herokuapp.com/reviews',{\r\n        method: 'POST',\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify({\r\n          drug: drug\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .then(reviews => this.handleReviews(reviews));\r\n\r\n  }\r\n\r\n  handleReviews(reviews) {\r\n    console.log(reviews)\r\n    this.setState({\r\n      reviews: reviews,\r\n      isLoaded: true,\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"container\">\r\n        <NavMenu />\r\n        <div className=\"myReviewContainer\">\r\n        <p className=\"myReviewTitle\">{this.state.drug}</p>\r\n          <hr className=\"underlineReview\" />\r\n          {\r\n            this.state.reviews.map((item, i) => {\r\n              if(this.state.isLoaded){\r\n                var name = this.state.reviews[i].name;\r\n                var lastName = this.state.reviews[i].lastname;\r\n                var avatarName = name.charAt(0);\r\n                var avatarLastName = lastName.charAt(0);\r\n        \r\n                var initials = avatarName + avatarLastName;\r\n\r\n              return <ReviewRect \r\n                        key={i}\r\n                        id={this.state.reviews[i].id}\r\n                        user_id={this.state.reviews[i].user_id}\r\n                        initials={initials} \r\n                        user={this.state.reviews[i].name + \" \" + this.state.reviews[i].lastname}\r\n                        title={this.state.reviews[i].title}\r\n                        avatarColor={this.state.reviews[i].avatar_color}\r\n                        avatarFontColor={this.state.reviews[i].avatar_font_color}\r\n                        rating={this.state.reviews[i].rating}\r\n                        drugName={this.state.reviews[i].drug}\r\n                        review={this.state.reviews[i].review}\r\n                     />\r\n              }\r\n              else {\r\n                return null;\r\n              }\r\n              })\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReviewsPage;","import React from \"react\";\r\nimport NavMenu from \"./NavMenu\";\r\nimport ReviewRect from \"./ReviewRect\";\r\nimport './components.scss';\r\n\r\nclass AllReviewsPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        reviews: [{}],\r\n        isLoaded: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    fetch('https://drug-review-backend.herokuapp.com/all/reviews')\r\n      .then(res => res.json())\r\n      .then(reviews => this.handleReviews(reviews));\r\n\r\n  }\r\n\r\n  handleReviews(reviews) {\r\n    console.log(\"reviews\")\r\n\r\n    console.log(reviews)\r\n    this.setState({\r\n      reviews: reviews,\r\n      isLoaded: true,\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"container\">\r\n        <NavMenu />\r\n        <div className=\"myReviewContainer\">\r\n        <p className=\"myReviewTitle\">All reviews</p>\r\n          <hr className=\"underlineReview\" />\r\n          {\r\n            this.state.reviews.map((item, i) => {\r\n              if(this.state.isLoaded){\r\n                var name = this.state.reviews[i].name;\r\n                var lastName = this.state.reviews[i].lastname;\r\n                var avatarName = name.charAt(0);\r\n                var avatarLastName = lastName.charAt(0);\r\n        \r\n                var initials = avatarName + avatarLastName;\r\n\r\n              return <ReviewRect \r\n                        key={i}\r\n                        id={this.state.reviews[i].id}\r\n                        user_id={this.state.reviews[i].user_id}\r\n                        initials={initials} \r\n                        user={this.state.reviews[i].name + \" \" + this.state.reviews[i].lastname}\r\n                        title={this.state.reviews[i].title}\r\n                        avatarColor={this.state.reviews[i].avatar_color}\r\n                        avatarFontColor={this.state.reviews[i].avatar_font_color}\r\n                        rating={this.state.reviews[i].rating}\r\n                        drugName={this.state.reviews[i].drug}\r\n                        review={this.state.reviews[i].review}\r\n                     />\r\n              }\r\n              else {\r\n                return null;\r\n              }\r\n              })\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllReviewsPage;","import React from \"react\";\r\nimport NavMenu from \"./NavMenu\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport PropTypes from 'prop-types';\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\r\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\r\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\r\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\r\nimport Box from '@material-ui/core/Box';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport queryString from 'query-string';\r\nimport './components.scss';\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\n\r\nconst customIcons = {\r\n  1: {\r\n    icon: <SentimentVeryDissatisfiedIcon fontSize=\"large\" />,\r\n    label: 'Very Dissatisfied',\r\n  },\r\n  2: {\r\n    icon: <SentimentDissatisfiedIcon fontSize=\"large\" />,\r\n    label: 'Dissatisfied',\r\n  },\r\n  3: {\r\n    icon: <SentimentSatisfiedIcon fontSize=\"large\" />,\r\n    label: 'Neutral',\r\n  },\r\n  4: {\r\n    icon: <SentimentSatisfiedAltIcon fontSize=\"large\" />,\r\n    label: 'Satisfied',\r\n  },\r\n  5: {\r\n    icon: <SentimentVerySatisfiedIcon fontSize=\"large\" />,\r\n    label: 'Very Satisfied',\r\n  },\r\n};\r\n\r\nfunction IconContainer(props) {\r\n  const { value, ...other } = props;\r\n  return <span {...other}>{customIcons[value].icon}</span>;\r\n}\r\n\r\nIconContainer.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\nclass ReviewEditPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleResponse = this.handleResponse.bind(this);\r\n    this.state = {\r\n      drugs: [],\r\n      drug: \"@\",\r\n      rating: null,\r\n      title: \"\",\r\n      review: \"\",\r\n      id: null,\r\n      redirectSuccess: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"id\") == null) {\r\n        window.location.replace(\"/login\");\r\n    }\r\n    else {\r\n        var url = this.props.location.search;\r\n        var params = queryString.parse(url);\r\n        var id = params.id;\r\n        this.setState({id: id});\r\n\r\n        fetch('https://drug-review-backend.herokuapp.com/edit/review',{\r\n            method: 'POST',\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify({\r\n              id: id\r\n            })\r\n          })\r\n          .then(res => res.json())\r\n          .then(review => this.handleResponse(review));\r\n\r\n        fetch(\"https://datadiscovery.nlm.nih.gov/resource/crzr-uvwg\")\r\n            .then(response => {\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                let tmpArray = []\r\n                for (var i = 0; i < data.length; i++) {\r\n                    tmpArray.push(data[i].medicine_name)\r\n                }\r\n                const uniqueDrugs = Array.from(new Set(tmpArray));\r\n                this.setState({\r\n                    drugs: uniqueDrugs\r\n                })\r\n            });\r\n      }\r\n  }\r\n\r\n  handleResponse(review) {\r\n    this.setState({\r\n        drug: review[0].drug,\r\n        rating: review[0].rating,\r\n        title: review[0].title,\r\n        review: review[0].review,\r\n      })\r\n  }\r\n\r\n  handleSubmit() {\r\n    console.log(this.state.drug)\r\n    console.log(this.state.rating)\r\n    console.log(this.state.title)\r\n    console.log(this.state.review)\r\n\r\n    if(this.state.drug !== \"\" && this.state.rating !== null && this.state.title !== \"\" && this.state.review !== \"\" && this.state.drug !== null) {\r\n      fetch('https://drug-review-backend.herokuapp.com/review/edit',{\r\n        method: 'POST',\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify({\r\n          id: this.state.id,\r\n          drug: this.state.drug,\r\n          rating: this.state.rating,\r\n          title: this.state.title,\r\n          review: this.state.review,\r\n\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .then(msg => this.handleAlert(msg));\r\n    }\r\n    else {\r\n      MySwal.fire({\r\n        icon: 'error',\r\n        title: 'All fields are required!',\r\n      })\r\n    }\r\n  }\r\n\r\n  handleAlert(msg) {\r\n    if(msg) {\r\n      MySwal.fire({\r\n        icon: 'success',\r\n        title: 'Your review was updated successfuly!',\r\n      })\r\n    }\r\n    else {\r\n      MySwal.fire({\r\n        icon: 'error',\r\n        title: 'Something went wrong',\r\n      })\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"container\">\r\n      <NavMenu />\r\n      <div className=\"reviewContainer\">\r\n        <div style={{margin: \"0\", textAlign: \"center\"}}><p className=\"myReviewTitle\">Edit your review - {this.state.drug}</p></div>\r\n        <hr className=\"underlineReviewPage\" />\r\n        <form noValidate autoComplete=\"off\">\r\n            {\r\n                (this.state.drug !== \"@\") ? <Autocomplete\r\n                                                defaultValue={this.state.drug}\r\n                                                onChange={(event, value) => this.setState({drug: value})}\r\n                                                id=\"combo-box-demo\"\r\n                                                options={this.state.drugs}\r\n                                                getOptionLabel={(option) => option}\r\n                                                className=\"reviewAutocomplete\"\r\n                                                renderInput={(params) => <TextField {...params} label=\"Search for drugs\" variant=\"outlined\" />}\r\n                                            />\r\n                                            : null\r\n            }\r\n\r\n          <Box className=\"reviewBox\" component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n            <p>Your overall rating of this drug</p>\r\n            {\r\n                (this.state.rating>0) ? <Rating\r\n                defaultValue={this.state.rating}\r\n                size=\"large\"\r\n                name=\"customized-icons\"\r\n                getLabelText={(value) => customIcons[value].label}\r\n                IconContainerComponent={IconContainer}\r\n                onChange={(event, newValue) => {\r\n                this.setState({rating: newValue});\r\n                }}\r\n            />\r\n            :\r\n            null\r\n            }\r\n          </Box>\r\n          <TextField className=\"reviewFormItem\" value={this.state.title} name=\"title\" id=\"outlined-basic\" label=\"Title of your review\" variant=\"outlined\" onChange={this.handleChange} />\r\n          <TextField\r\n            value={this.state.review}\r\n            className=\"reviewFormItem\"\r\n            id=\"outlined-multiline-static\"\r\n            label=\"Your review\"\r\n            name=\"review\"\r\n            onChange={this.handleChange}\r\n            placeholder=\"Tell people about your expirience with this drug.\"\r\n            multiline\r\n            rows=\"4\"\r\n            variant=\"outlined\"\r\n          />\r\n          <div style={{textAlign: \"right\", marginBottom: 35}}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              endIcon={<SendIcon />}\r\n              className=\"reviewSubmit\"\r\n              onClick={this.handleSubmit}\r\n            >\r\n              Submit your review\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReviewEditPage;","import React from \"react\";\r\nimport Swal from 'sweetalert2';\r\nimport Box from '@material-ui/core/Box';\r\nimport Link from '@material-ui/core/Link';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport NavMenu from \"./NavMenu\";\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nclass MobileRegister extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegistration = this.handleRegistration.bind(this);\r\n    this.handleResponse = this.handleResponse.bind(this);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      name: '',\r\n      lastname: '',\r\n      rows: [],\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleEmailTaken(rows) {\r\n    MySwal.fire({\r\n      icon: 'error',\r\n      title: 'Email is already taken!',\r\n    })\r\n    }\r\n\r\n    handleRegistration() {\r\n      if(this.state.name === \"\" || this.state.lastname === \"\" || this.state.email === \"\" || this.state.password === \"\") {\r\n        MySwal.fire({\r\n          icon: 'error',\r\n          title: 'All fields are required!',\r\n        })\r\n      }\r\n      else if (this.state.password.length < 6) {\r\n        MySwal.fire({\r\n          icon: 'error',\r\n          title: 'Password has to have atleast 6 characters!',\r\n        })\r\n        this.setState({\r\n          password: \"\"\r\n        })\r\n      }\r\n      else {\r\n      fetch('https://drug-review-backend.herokuapp.com/user/new',{\r\n        method: 'POST',\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify({\r\n          name: this.state.name,\r\n          lastname: this.state.lastname,\r\n          email: this.state.email,\r\n          password: this.state.password\r\n        })\r\n      })\r\n      .then(res => res.json())\r\n      .then(response => this.handleResponse(response));\r\n    }\r\n    }\r\n\r\n    handleResponse(response) {\r\n      if(response === false) {\r\n        MySwal.fire({\r\n          icon: 'error',\r\n          title: 'Email is already taken!',\r\n        })\r\n        this.setState({\r\n          email: \"\",\r\n          password: \"\"\r\n        })\r\n      }\r\n      else if(response === \"wrong_type\") {\r\n        MySwal.fire({\r\n          icon: 'error',\r\n          title: 'Invalid email!',\r\n        })\r\n        this.setState({\r\n          email: \"\",\r\n          password: \"\"\r\n        })\r\n      }\r\n      else {\r\n        window.location.reload()\r\n      }\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <NavMenu />\r\n        <div className=\"base-container\" ref={this.props.containerRef}>\r\n          <Box className=\"loginBox\" boxShadow={4}>\r\n            <div className=\"header\">Register</div>\r\n            <div className=\"content\">\r\n              <div className=\"form\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"namme\">First name</label>\r\n                  <input type=\"text\" name=\"name\" value={this.state.name} placeholder=\"First name\" onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"namme\">Last name</label>\r\n                  <input type=\"text\" name=\"lastname\" value={this.state.lastname} placeholder=\"Last name\" onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input type=\"email\" name=\"email\" placeholder=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input type=\"password\" name=\"password\" placeholder=\"password\" value={this.state.password} onChange={this.handleChange} onKeyDown={this.keyPress} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"footer\">\r\n              <button type=\"button\" style={{background: \"#4A7EBB\"}} className=\"btn\" onClick={this.handleRegistration}>\r\n                Register\r\n              </button><br /><br />\r\n              <Link href=\"/login\">Login here</Link>\r\n            </div>\r\n          </Box>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MobileRegister;\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport LoginPageResponsive from \"./components/LoginPageResponsive\";\r\nimport SearchPage from \"./components/SearchPage\";\r\nimport ReviewPage from \"./components/ReviewPage\";\r\nimport MyReviewsPage from \"./components/MyReviewsPage\";\r\nimport ProfilePage from \"./components/ProfilePage\";\r\nimport ReviewsPage from \"./components/ReviewsPage\";\r\nimport AllReviewsPage from \"./components/AllReviewsPage\";\r\nimport ReviewEditPage from \"./components/ReviewEditPage\";\r\nimport MobileLogin from \"./components/MobileLogin\";\r\nimport MobileRegister from \"./components/MobileRegister\";\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n        <Route path=\"/\" exact component={SearchPage} />\r\n          <Route path=\"/login\" component={LoginPageResponsive} />\r\n          <Route path=\"/review\" component={ReviewPage} />\r\n          <Route path=\"/edit/review\" component={ReviewEditPage} />\r\n          <Route path=\"/user/reviews\" component={MyReviewsPage} />\r\n          <Route path=\"/user/profile\" component={ProfilePage} />\r\n          <Route path=\"/reviews\" component={ReviewsPage} />\r\n          <Route path=\"/all/reviews\" component={AllReviewsPage} />\r\n          <Route path=\"/mobile_login\" component={MobileLogin} />\r\n          <Route path=\"/register/mobile\" component={MobileRegister} />\r\n          <Route path=\"*\" component={() => \"404 NOT FOUND\"} />\r\n        </Switch>\r\n      </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/login.9a76e74e.svg\";"],"sourceRoot":""}